////
/// @group colors
////

/// gets a color from _vars.scss defined set
/// @param $colorSet {String} color name
/// @param $variation {String} (base) set variation
@function color($colorSet, $variation: base) {
  @if type-of($colorSet) == color {
    @return $colorSet;
  }

  @if map-has-key($colorSet, $variation) {
    @return map-get($colorSet, $variation);
  }

  @warn "Unknown #{$variation} variation in #{$colorSet}.";
  @return map-get($colorSet, base);
}

/// gets a color variation from _vars.scss defined set by index
/// @param $colorSet {String} color name
/// @param $by {Number} offset color
@function offsetVariation($variation, $by) {
  $variations: base, light, fade, faint;
  $index: index($variations, $variation);
  $index_by: $index + $by;

  @if ($index_by > length($variations)) {
    @return nth($variations, length($variations) - 1);
  }

  @if ($index_by < 0) {
    @return nth($variations, 0);
  }

  @return nth($variations, $index_by);
}
